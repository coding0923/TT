<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tt.mapper.TestMapper">

    <!-- 등록된 문제 수 카운트 -->
    <select id="countQuestion" resultType="_int">
        select 
            count(*)
        from
            question_table
    </select>

    <!-- 문제 등록 -->
    <insert id="registerQuestion" parameterType="QuestionDTO">
	    insert into question_table (
	        question_id,
	        question_content,
	        question_score,
	        question_answer,
	        question_image,
	        insert_date,
	        insert_user
	    ) values (
	        question_seq.nextval,
	        #{questionContent},
	        #{questionScore},
	        #{questionAnswer},
	        #{questionImage},
	        sysdate,
	        #{insertUser}
	    )
    </insert>
   
    <!-- 문제 전체 조회 -->
    <select id="viewAllQuestion" resultType="QuestionDTO">
        select
            question_id,
            question_content,
            question_score,
            question_answer
        from
            question_table
        order by 
            question_id
        desc
    </select>
    
        <!-- 시험지 전체 조회 -->
    <select id="viewAllTestPaper" resultType="TestPaperDTO">
        select
            test_paper_id,
            class_id,
            academy_id,
            subject_code,
            insert_user
        from
            test_paper_table
        order by 
            test_paper_id
        desc
    </select>
    
    <!-- 문제 상세 조회 -->
    <select id="detailQuestion" parameterType="String" resultType="QuestionDTO">
        select
            question_id,
            question_score,
            question_content,
            question_answer,
            question_image,
            insert_user,
            insert_date,
            update_user,
            update_date
        from
            question_table
        where
            question_id = #{qid}
    </select>
    
    <!-- 문제 삭제 -->
    <delete id="deleteQuestion" parameterType="String">
        delete
        from
            question_table
        where
            question_id = #{qid}
    </delete>
    
    <!-- 문제 수정 -->
    <update id="updateQuestion" parameterType="QuestionDTO">
        update question_table
        set
            question_score = 
                #{questionScore},
            question_content = 
                #{questionContent},
            question_answer = 
                #{questionAnswer},
            update_user = 
                #{updateUser},
            update_date = 
                sysdate
        where
            question_id = 
                #{questionId}
    </update>
    
    <!-- 선생님의 반 데이터 조회 -->
    <select id="teacherCurri" parameterType="String" resultType="map">
        SELECT  DISTINCT
	        ct.class_id, 
	        ct.class_name,
	        crt.INSERT_USER,
	        crt.SUBJECT_CODE,
	        st.SUBJECT_NAME,
	        crt.ACADEMY_ID
        FROM 
	        class_table ct,
			CURRICULUM_TABLE crt,
			SUBJECT_TABLE st
		WHERE 
            ct.CLASS_ID = crt.CLASS_ID
		AND
            crt.SUBJECT_CODE = st.SUBJECT_CODE
        AND
            crt.INSERT_USER = #{teacherId}
    </select>
    
    <!-- 시험지 생성 -->
    <insert id="insertTestPaper" parameterType="TestPaperDTO">
        insert into test_paper_table (
            test_paper_id,
            question_id,
            question_score,
            question_content,
            question_image,
            question_answer,
            class_id,
            subject_code,
            academy_id,
            insert_user,
            insert_date
        )values (
            test_paper_seq.nextval,
            #{questionId},
            #{questionScore},
            #{questionContent},
            #{questionImage, jdbcType=VARCHAR},
            #{questionAnswer},
            #{classId, jdbcType=VARCHAR},
            #{subjectCode, jdbcType=INTEGER},
            #{academyId, jdbcType=VARCHAR},
            #{insertUser},
            sysdate
        )
    </insert>
    
    <!-- 시험지 안의 문제 개수 -->
    <select id="questionInTestPaper" parameterType="String" resultType="int">
        select
            count(*)
        from
            test_paper_table
        where
            test_paper_id = #{testPaperId}
    </select>
    
    <!-- 시험지 selectbox testpaperid -->
    <select id="selectBoxTestPaper" resultType="TestPaperDTO">
        select
            test_paper_id
        from
            test_paper_table
    </select>
    
    <!-- 학생 시험 응시 문제 불러오기 -->
    <select id="solveTest" parameterType="String" resultType="TestPaperDTO">
        select
            test_paper_id,
            question_id,
            question_score,
            question_content,
            question_image
        from
            test_paper_table
        where
            test_paper_id = #{tid}
    </select>
    
    <!-- 제출 여부 확인 -->
    <select id="checkSubmitAnswer" parameterType="HashMap" resultType="_int">
        select
          count(*)
        from
          student_exam_table
        where<!-- 
          test_list_id = #{testListId}
        AND  -->
          student_id = #{studentId}
    </select>
    
      
    <!-- 학생 답안 등록 -->
    <insert id="insertStudentAnswer" parameterType="StudentExamDTO">
        insert into student_exam_table (
            question_id,
            test_paper_id,
            student_id,
            student_answer,
            correct_or_not,
            insert_date
        )
        values (
            #{questionId},
            #{testPaperId},
            #{studentId},
            #{studentAnswer},
            'N',
            sysdate
        )
    </insert>
    
    <!-- 채점지 내용 조회 -->
    <select id="viewStudentAnswer" parameterType ="String" resultType="MarkingTestDTO">
        SELECT DISTINCT
            qt.question_id, 
            qt.question_content, 
            qt.question_answer, 
            se.student_answer, 
            se.student_id,
            se.test_paper_id
        FROM 
            question_table qt
        INNER JOIN 
            student_exam_table se
        ON 
            qt.question_id = 
            se.question_id
        AND 
            se.test_paper_id = #{tid}
        ORDER BY 
            question_id
    </select>
    
    <!-- 채점 처리 -->
    <update id="updateCON" parameterType="MarkingTestDTO">
        UPDATE 
            student_exam_table
        SET 
            correct_or_not = 'Y',
            teacher_Id = #{teacherId}
        WHERE 
            question_id = #{questionId}
        AND 
            student_id = #{studentId}
        AND
            test_paper_id = #{testPaperId}
    </update>
    
</mapper>